---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const notes = await getCollection('notes');
  return notes.map(note => ({
    params: { slug: note.slug },
    props: { note },
  }));
}

const { note } = Astro.props;
const { Content } = await note.render();
---

<Layout title={`${note.data.title} - notes - chirag`}>
  <article class="note">
    <header>
      <div class="meta">
        <span class="type">{note.data.type}</span>
        <span class:list={['status', { done: note.data.status === 'done' }]}>
          {note.data.status}
        </span>
      </div>
      <h1>{note.data.title}</h1>
      {note.data.url && (
        <a href={note.data.url} class="source-link" target="_blank" rel="noopener noreferrer">
          View Original Source →
        </a>
      )}
    </header>
    
    <div class="content">
      <Content />
    </div>

    <footer>
      <a href="/notes" class="back-link">← Back to Notes</a>
    </footer>
  </article>
</Layout>

<style>
  .note {
    max-width: 65ch;
    margin: 0 auto;
  }
  header {
    margin-bottom: 2rem;
  }
  .meta {
    display: flex;
    gap: 1rem;
    margin-bottom: 1rem;
  }
  .type {
    font-size: 0.9rem;
    color: var(--accent);
    text-transform: capitalize;
  }
  h1 {
    font-size: 2rem;
    margin-bottom: 1rem;
  }
  .status {
    font-size: 0.8rem;
    padding: 0.2rem 0.5rem;
    border-radius: 9999px;
    background-color: var(--card-bg);
    color: var(--text-muted);
  }
  .status.done {
    background-color: var(--success-bg);
    color: var(--success);
  }
  .source-link {
    display: inline-block;
    color: var(--accent);
    font-size: 0.9rem;
    margin-bottom: 2rem;
  }
  .source-link:hover {
    text-decoration: underline;
  }
  .content {
    line-height: 1.6;
  }
  .content :global(h2) {
    font-size: 1.5rem;
    margin: 2rem 0 1rem;
    color: var(--accent);
  }
  .content :global(h3) {
    font-size: 1.25rem;
    margin: 1.5rem 0 1rem;
  }
  .content :global(p) {
    margin-bottom: 1.5rem;
  }
  .content :global(ul), .content :global(ol) {
    margin-bottom: 1.5rem;
    padding-left: 1.5rem;
  }
  .content :global(li) {
    margin-bottom: 0.5rem;
  }
  .content :global(pre) {
    background: #f1f5f9;
    padding: 1rem;
    border-radius: 4px;
    overflow-x: auto;
    margin-bottom: 1.5rem;
  }
  .content :global(code) {
    font-size: 0.9em;
    background: #f1f5f9;
    padding: 0.2em 0.4em;
    border-radius: 4px;
  }
  .content :global(pre code) {
    background: none;
    padding: 0;
  }
  .content :global(blockquote) {
    border-left: 4px solid var(--accent);
    margin: 0;
    padding-left: 1rem;
    color: #64748b;
  }
  .content :global(img) {
    max-width: 100%;
    height: auto;
    border-radius: 8px;
    margin: 1.5rem 0;
  }
  footer {
    margin-top: 4rem;
    padding-top: 2rem;
    border-top: 1px solid #e2e8f0;
  }
  .back-link {
    color: var(--accent);
  }
  .back-link:hover {
    text-decoration: underline;
  }

  /* Update hover states for cards */
  .note-item:hover, .paper-link:hover {
    background-color: var(--card-bg);
  }
</style>